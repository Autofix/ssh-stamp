{
  "bomFormat": "CycloneDX",
  "specVersion": "1.3",
  "version": 1,
  "serialNumber": "urn:uuid:e4fd1f91-06aa-410b-92ce-a9751747c55d",
  "metadata": {
    "timestamp": "2025-04-22T06:02:24.083109000Z",
    "tools": [
      {
        "vendor": "CycloneDX",
        "name": "cargo-cyclonedx",
        "version": "0.5.7"
      }
    ],
    "authors": [
      {
        "name": "Roman Valls Guimera",
        "email": "brainstorm@users.noreply.github.com"
      }
    ],
    "component": {
      "type": "application",
      "bom-ref": "path+file:///Users/rvalls/dev/personal/ssh-stamp#esp-ssh-rs@0.1.0",
      "author": "Roman Valls Guimera <brainstorm@users.noreply.github.com>",
      "name": "esp-ssh-rs",
      "version": "0.1.0",
      "scope": "required",
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-ssh-rs@0.1.0?download_url=file://.",
      "components": [
        {
          "type": "library",
          "bom-ref": "path+file:///Users/rvalls/dev/personal/ssh-stamp#esp-ssh-rs@0.1.0 bin-target-0",
          "name": "esp_ssh_rs",
          "version": "0.1.0",
          "purl": "pkg:cargo/esp-ssh-rs@0.1.0?download_url=file://.#src/lib.rs"
        },
        {
          "type": "application",
          "bom-ref": "path+file:///Users/rvalls/dev/personal/ssh-stamp#esp-ssh-rs@0.1.0 bin-target-1",
          "name": "esp-ssh-rs",
          "version": "0.1.0",
          "purl": "pkg:cargo/esp-ssh-rs@0.1.0?download_url=file://.#src/main.rs"
        }
      ]
    },
    "properties": [
      {
        "name": "cdx:rustc:sbom:target:triple",
        "value": "aarch64-apple-darwin"
      }
    ]
  },
  "components": [
    {
      "type": "library",
      "bom-ref": "git+https://github.com/mkj/sunset#0.2.0",
      "name": "sunset",
      "version": "0.2.0",
      "description": "A SSH library suitable for embedded and larger programs",
      "scope": "required",
      "licenses": [
        {
          "expression": "0BSD"
        }
      ],
      "purl": "pkg:cargo/sunset@0.2.0?vcs_url=git%2Bhttps://github.com/mkj/sunset%40b1d2c836f1893a7b880937a3fbe1313fb7978f5c",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mkj/sunset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "git+https://github.com/mkj/sunset#sunset-embassy@0.2.0",
      "name": "sunset-embassy",
      "version": "0.2.0",
      "description": "async wrapper for Sunset SSH",
      "scope": "required",
      "licenses": [
        {
          "expression": "0BSD"
        }
      ],
      "purl": "pkg:cargo/sunset-embassy@0.2.0?vcs_url=git%2Bhttps://github.com/mkj/sunset%40b1d2c836f1893a7b880937a3fbe1313fb7978f5c",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mkj/sunset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "git+https://github.com/mkj/sunset#sunset-sshwire-derive@0.2.0",
      "name": "sunset-sshwire-derive",
      "version": "0.2.0",
      "description": "Derive macros for Sunset SSH packet encoder/decoder",
      "scope": "required",
      "licenses": [
        {
          "expression": "0BSD"
        }
      ],
      "purl": "pkg:cargo/sunset-sshwire-derive@0.2.0?vcs_url=git%2Bhttps://github.com/mkj/sunset%40b1d2c836f1893a7b880937a3fbe1313fb7978f5c",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/mkj/sunset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
      "author": "RustCrypto Developers",
      "name": "aes",
      "version": "0.8.4",
      "description": "Pure Rust implementation of the Advanced Encryption Standard (a.k.a. Rijndael)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b169f7a6d4742236a0a00c541b845991d0ac43e546831af1249753ab4c3aa3a0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/aes@0.8.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/aes"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/block-ciphers"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.96",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "anyhow",
      "version": "1.0.96",
      "description": "Flexible concrete Error type built on std::error::Error",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6b964d184e89d9b6b67dd2715bc8e74cf3107fb2b529990c90cf517326150bf4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/anyhow@1.0.96",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/anyhow"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/anyhow"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ascii@1.1.0",
      "author": "Thomas Bahn <thomas@thomas-bahn.net>, Torbjørn Birch Moltu <t.b.moltu@lyse.net>, Simon Sapin <simon.sapin@exyr.org>",
      "name": "ascii",
      "version": "1.1.0",
      "description": "ASCII-only equivalents to `char`, `str` and `String`.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d92bec98840b8f03a5ff5413de5293bfcd8bf96467cf5452609f939ec6f5de16"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ascii@1.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ascii"
        },
        {
          "type": "vcs",
          "url": "https://github.com/tomprogrammer/rust-ascii"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#atomic-polyfill@1.0.3",
      "author": "Dario Nieuwenhuis <dirbaio@dirbaio.net>",
      "name": "atomic-polyfill",
      "version": "1.0.3",
      "description": "Atomic polyfills, for targets where they're not available.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8cf2bce30dfe09ef0bfaef228b9d414faaf7e563035494d7fe092dba54b300f4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/atomic-polyfill@1.0.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/atomic-polyfill"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
      "author": "Josh Stone <cuviper@gmail.com>",
      "name": "autocfg",
      "version": "1.4.0",
      "description": "Automatic cfg for Rust compiler features",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/autocfg@1.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/autocfg/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/cuviper/autocfg"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.6.0",
      "author": "RustCrypto Developers",
      "name": "base64ct",
      "version": "1.6.0",
      "description": "Pure Rust implementation of Base64 (RFC 4648) which avoids any usages of data-dependent branches/LUTs and thereby provides portable \"best effort\" constant-time operation and embedded-friendly no_std support ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8c3c1a368f70d6cf7302d78f8f7093da241fb8e8807c05cc9e51a125895a6d5b"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/base64ct@1.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/base64ct"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/base64ct"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#basic-toml@0.1.9",
      "author": "Alex Crichton <alex@alexcrichton.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "basic-toml",
      "version": "0.1.9",
      "description": "Minimal TOML library with few dependencies",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "823388e228f614e9558c6804262db37960ec8821856535f5c3f59913140558f8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/basic-toml@0.1.9",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/basic-toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/basic-toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitfield-macros@0.18.1",
      "author": "Loïc Damien <loic.damien@dzamlo.ch>",
      "name": "bitfield-macros",
      "version": "0.18.1",
      "description": "Internal crate for the bitfield crate.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "331afbb18ce7b644c0b428726d369c5dd37ca0b815d72a459fcc2896c3c8ad32"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitfield-macros@0.18.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitfield-macros"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dzamlo/rust-bitfield"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitfield@0.18.1",
      "author": "Loïc Damien <loic.damien@dzamlo.ch>",
      "name": "bitfield",
      "version": "0.18.1",
      "description": "This crate provides macros to generate bitfield-like struct.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4c7e6caee68becd795bfd65f1a026e4d00d8f0c2bc9be5eb568e1015f9ce3c34"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitfield@0.18.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitfield"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dzamlo/rust-bitfield"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
      "author": "The Rust Project Developers",
      "name": "bitflags",
      "version": "1.3.2",
      "description": "A macro to generate structures which behave like bitflags. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitflags@1.3.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitflags"
        },
        {
          "type": "website",
          "url": "https://github.com/bitflags/bitflags"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bitflags/bitflags"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.8.0",
      "author": "The Rust Project Developers",
      "name": "bitflags",
      "version": "2.8.0",
      "description": "A macro to generate structures which behave like bitflags. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8f68f53c83ab957f72c32642f3868eec03eb974d1fb82e453128456482613d36"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/bitflags@2.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/bitflags"
        },
        {
          "type": "website",
          "url": "https://github.com/bitflags/bitflags"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bitflags/bitflags"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
      "author": "RustCrypto Developers",
      "name": "block-buffer",
      "version": "0.10.4",
      "description": "Buffer type for block processing of data",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3078c7629b62d3f0439517fa394996acacc5cbc91c5a20d8c658e77abd503a71"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/block-buffer@0.10.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/block-buffer"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.21.0",
      "author": "Lokathor <zefria@gmail.com>",
      "name": "bytemuck",
      "version": "1.21.0",
      "description": "A crate for mucking around with piles of bytes.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ef657dfab802224e671f5818e9a4935f9b1957ed18e58292690cc39e7a4092a3"
        }
      ],
      "licenses": [
        {
          "expression": "Zlib OR Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/bytemuck@1.21.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/Lokathor/bytemuck"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "byteorder",
      "version": "1.5.0",
      "description": "Library for reading/writing numbers in big-endian and little-endian.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1fd0f2584146f6f2ef48085050886acf353beff7305ebd1ae69500e27c67f64b"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/byteorder@1.5.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/byteorder"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/byteorder"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/byteorder"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "cfg-if",
      "version": "1.0.0",
      "description": "A macro to ergonomically define an item depending on a large number of #[cfg] parameters. Structured like an if-else chain, the first matching branch is the item that gets emitted. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cfg-if@1.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cfg-if"
        },
        {
          "type": "website",
          "url": "https://github.com/alexcrichton/cfg-if"
        },
        {
          "type": "vcs",
          "url": "https://github.com/alexcrichton/cfg-if"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
      "author": "RustCrypto Developers",
      "name": "chacha20",
      "version": "0.9.1",
      "description": "The ChaCha20 stream cipher (RFC 8439) implemented in pure Rust using traits from the RustCrypto `cipher` crate, with optional architecture-specific hardware acceleration (AVX2, SSE2). Additionally provides the ChaCha8, ChaCha12, XChaCha20, XChaCha12 and XChaCha8 stream ciphers, and also optional rand_core-compatible RNGs based on those ciphers. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c3613f74bd2eac03dad61bd53dbe620703d4371614fe0bc3b9f04dd36fe4e818"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/chacha20@0.9.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/chacha20"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/stream-ciphers"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.40",
      "name": "chrono",
      "version": "0.4.40",
      "description": "Date and time library for Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1a7964611d71df112cb1730f2ee67324fcf4d0fc6606acbbe9bfe06df124637c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/chrono@0.4.40",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/chrono/"
        },
        {
          "type": "website",
          "url": "https://github.com/chronotope/chrono"
        },
        {
          "type": "vcs",
          "url": "https://github.com/chronotope/chrono"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
      "author": "RustCrypto Developers",
      "name": "cipher",
      "version": "0.4.4",
      "description": "Traits for describing block ciphers and stream ciphers",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "773f3b9af64447d2ce9850330c473515014aa235e6a783b02db81ff39e4a3dad"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cipher@0.4.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cipher"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
      "author": "RustCrypto Developers",
      "name": "cpufeatures",
      "version": "0.2.17",
      "description": "Lightweight runtime CPU feature detection for aarch64, loongarch64, and x86/x86_64 targets,  with no_std support and support for mobile targets including Android and iOS ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "59ed5838eebb26a2bb2e58f6d5b5316989ae9d08bab10e0e6d103e656d1b0280"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/cpufeatures@0.2.17",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/cpufeatures"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
      "name": "critical-section",
      "version": "1.2.0",
      "description": "Cross-platform critical section",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "790eea4361631c5e7d22598ecd5723ff611904e3344ce8720784c93e3d83d40b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/critical-section@1.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/critical-section"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
      "author": "RustCrypto Developers",
      "name": "crypto-common",
      "version": "0.1.6",
      "description": "Common cryptographic traits",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1bfb12502f3fc46cca1bb51ac28df9d618d813cdc3d2f25b9fe775a34af26bb3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/crypto-common@0.1.6",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crypto-common"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
      "author": "RustCrypto Developers",
      "name": "ctr",
      "version": "0.9.2",
      "description": "CTR block modes of operation",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0369ee1ad671834580515889b80f2ea915f23b8be8d0daa4bbaf2ac5c7590835"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ctr@0.9.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ctr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/block-modes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
      "author": "Isis Lovecruft <isis@patternsinthevoid.net>, Henry de Valence <hdevalence@hdevalence.ca>",
      "name": "curve25519-dalek",
      "version": "4.1.3",
      "description": "A pure-Rust implementation of group operations on ristretto255 and Curve25519",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "97fb8b7c4503de7d6ae7b42ab72a5a59857b4c937ec27a3d4539dba95b5ab2be"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/curve25519-dalek@4.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/curve25519-dalek"
        },
        {
          "type": "website",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek/tree/main/curve25519-dalek"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling",
      "version": "0.20.10",
      "description": "A proc-macro library for reading attributes into structs when implementing custom derives. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6f63b86c8a8826a49b8c21f08a2d07338eec8d900540f8630dc76284be802989"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling@0.20.10",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/darling/0.20.10"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_core",
      "version": "0.20.10",
      "description": "Helper crate for proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "95133861a8032aaea082871032f5815eb9e98cef03fa916ab4500513994df9e5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_core@0.20.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.10",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "darling_macro",
      "version": "0.20.10",
      "description": "Internal support for a proc-macro library for reading attributes into structs when implementing custom derives. Use https://crates.io/crates/darling in your code. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d336a2a514f6ccccaa3e09b02d41d35330c07ddf03a62165fcec10bb561c7806"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/darling_macro@0.20.10",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/darling"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#delegate@0.13.2",
      "author": "Godfrey Chan <godfreykfc@gmail.com>, Jakub Beránek <berykubik@gmail.com>",
      "name": "delegate",
      "version": "0.13.2",
      "description": "Method delegation with less boilerplate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "297806318ef30ad066b15792a8372858020ae3ca2e414ee6c2133b1eb9e9e945"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/delegate@0.13.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/kobzol/rust-delegate"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
      "author": "RustCrypto Developers",
      "name": "digest",
      "version": "0.10.7",
      "description": "Traits for cryptographic hash functions and message authentication codes",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9ed9a281f7bc9b7576e61468ba615a66a5c8cfdff42420a70aa82701a3b1e292"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/digest@0.10.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/digest"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
      "author": "Slint Developers <info@slint.dev>",
      "name": "document-features",
      "version": "0.2.11",
      "description": "Extract documentation for the feature flags from comments in Cargo.toml",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "95249b50c6c185bee49034bcb378a49dc2b5dff0be90ff6616d31d64febab05d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/document-features@0.2.11",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://slint.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/slint-ui/document-features"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.1.1",
      "author": "isis lovecruft <isis@patternsinthevoid.net>, Tony Arcieri <bascule@gmail.com>, Michael Rosenberg <michael@mrosenberg.pub>",
      "name": "ed25519-dalek",
      "version": "2.1.1",
      "description": "Fast and efficient ed25519 EdDSA key generations, signing, and verification in pure Rust.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4a3daa8e81a3963a60642bcc1f90a670680bd4a77535faa384e9d1c79d620871"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/ed25519-dalek@2.1.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ed25519-dalek"
        },
        {
          "type": "website",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek/tree/main/ed25519-dalek"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3",
      "author": "RustCrypto Developers",
      "name": "ed25519",
      "version": "2.2.3",
      "description": "Edwards Digital Signature Algorithm (EdDSA) over Curve25519 (as specified in RFC 8032) support library providing signature type definitions and PKCS#8 private key decoding/encoding support ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "115531babc129696a58c64a4fef0a8bf9e9698629fb97e9e40767d235cfbcd53"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ed25519@2.2.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ed25519"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/signatures/tree/master/ed25519"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#edge-dhcp@0.5.0",
      "name": "edge-dhcp",
      "version": "0.5.0",
      "description": "Async + `no_std` + no-alloc implementation of the DHCP protocol",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b6c14e92b3e72e93428f87e64f14e2b868b8adcd2e38e0ebf72baa158fe0f930"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/edge-dhcp@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ivmarkov/edge-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#edge-nal-embassy@0.5.0",
      "name": "edge-nal-embassy",
      "version": "0.5.0",
      "description": "An implementation of edge-nal based on `embassy-net`",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8aacee123b1a4df16dfba7b46ea0912e9d99bc099fe81bd2a564013510471e41"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/edge-nal-embassy@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ivmarkov/edge-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#edge-nal@0.5.0",
      "name": "edge-nal",
      "version": "0.5.0",
      "description": "Hosts a bunch of traits which are not yet available in the embedded-nal-async crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ac19c3edcdad839c71cb919cd09a632d9915d630760b37f0b74290188c08f248"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/edge-nal@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ivmarkov/edge-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#edge-raw@0.5.0",
      "name": "edge-raw",
      "version": "0.5.0",
      "description": "Async + `no_std` + no-alloc implementation of IP and UDP packet creation and parsing",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1d80a91a0c4abb68a9bc4c0df607135b5d9b6885b49acfe2d2c881e3f9623324"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/edge-raw@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/ivmarkov/edge-net"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-embedded-hal@0.3.0",
      "name": "embassy-embedded-hal",
      "version": "0.3.0",
      "description": "Collection of utilities to use `embedded-hal` and `embedded-storage` traits with Embassy.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "41fea5ef5bed4d3468dfd44f5c9fa4cda8f54c86d4fb4ae683eacf9d39e2ea12"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-embedded-hal@0.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-embedded-hal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-executor-macros@0.6.2",
      "name": "embassy-executor-macros",
      "version": "0.6.2",
      "description": "macros for creating the entry point and tasks for embassy-executor",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3577b1e9446f61381179a330fc5324b01d511624c55f25e3c66c9e3c626dbecf"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-executor-macros@0.6.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-executor-macros"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-executor@0.7.0",
      "name": "embassy-executor",
      "version": "0.7.0",
      "description": "async/await executor designed for embedded usage",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "90327bcc66333a507f89ecc4e2d911b265c45f5c9bc241f98eee076752d35ac6"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-executor@0.7.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-executor"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
      "name": "embassy-futures",
      "version": "0.1.1",
      "description": "no-std, no-alloc utilities for working with futures",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1f878075b9794c1e4ac788c95b728f26aa6366d32eeb10c7051389f898f7d067"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-futures@0.1.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-net-driver@0.2.0",
      "name": "embassy-net-driver",
      "version": "0.2.0",
      "description": "Driver trait for the `embassy-net` async TCP/IP network stack.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "524eb3c489760508f71360112bca70f6e53173e6fe48fc5f0efd0f5ab217751d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-net-driver@0.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-net@0.6.0",
      "name": "embassy-net",
      "version": "0.6.0",
      "description": "Async TCP/IP network stack for embedded systems",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ed041cc19a603d657124fddefdcbe5ef8bd60e77d972793ebb57de93394f5949"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-net@0.6.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-net"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.5.0",
      "name": "embassy-sync",
      "version": "0.5.0",
      "description": "no-std, no-alloc synchronization primitives with async support",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "dd938f25c0798db4280fcd8026bf4c2f48789aebf8f77b6e5cf8a7693ba114ec"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-sync@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
      "name": "embassy-sync",
      "version": "0.6.2",
      "description": "no-std, no-alloc synchronization primitives with async support",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8d2c8cdff05a7a51ba0087489ea44b0b1d97a296ca6b1d6d1a33ea7423d34049"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-sync@0.6.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-sync"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-time-driver@0.2.0",
      "name": "embassy-time-driver",
      "version": "0.2.0",
      "description": "Driver trait for embassy-time",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8d45f5d833b6d98bd2aab0c2de70b18bfaa10faf661a1578fd8e5dfb15eb7eba"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-time-driver@0.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-time-driver"
        },
        {
          "type": "other",
          "url": "embassy-time"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-time-queue-utils@0.1.0",
      "name": "embassy-time-queue-utils",
      "version": "0.1.0",
      "description": "Timer queue driver trait for embassy-time",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "dc55c748d16908a65b166d09ce976575fb8852cf60ccd06174092b41064d8f83"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-time-queue-utils@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-time-queue-utils"
        },
        {
          "type": "other",
          "url": "embassy-time-queue"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
      "name": "embassy-time",
      "version": "0.4.0",
      "description": "Instant and Duration for embedded no-std systems, with async timer support",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f820157f198ada183ad62e0a66f554c610cdcd1a9f27d4b316358103ced7a1f8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embassy-time@0.4.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.embassy.dev/embassy-time"
        },
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/embassy"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-can@0.4.1",
      "name": "embedded-can",
      "version": "0.4.1",
      "description": "HAL traits for Controller Area Network (CAN) devices.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e9d2e857f87ac832df68fa498d18ddc679175cf3d2e4aa893988e5601baf9438"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-can@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-can"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/embedded-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-hal-async@1.0.0",
      "author": "The Embedded HAL Team and Contributors <embedded-hal@teams.rust-embedded.org>",
      "name": "embedded-hal-async",
      "version": "1.0.0",
      "description": "An asynchronous Hardware Abstraction Layer (HAL) for embedded systems",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0c4c685bbef7fe13c3c6dd4da26841ed3980ef33e841cddfa15ce8a8fb3f1884"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-hal-async@1.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-hal-async"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/embedded-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@0.2.7",
      "author": "The Embedded HAL Team <embedded-hal@teams.rust-embedded.org>, Jorge Aparicio <jorge@japaric.io>, Jonathan 'theJPster' Pallant <github@thejpster.org.uk>",
      "name": "embedded-hal",
      "version": "0.2.7",
      "description": " A Hardware Abstraction Layer (HAL) for embedded systems ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "35949884794ad573cf46071e41c9b60efb0cb311e3ca01f7af807af1debc66ff"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-hal@0.2.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-hal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/embedded-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@1.0.0",
      "author": "The Embedded HAL Team <embedded-hal@teams.rust-embedded.org>, Jorge Aparicio <jorge@japaric.io>, Jonathan 'theJPster' Pallant <github@thejpster.org.uk>",
      "name": "embedded-hal",
      "version": "1.0.0",
      "description": " A Hardware Abstraction Layer (HAL) for embedded systems ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "361a90feb7004eca4019fb28352a9465666b24f840f5c3cddf0ff13920590b89"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-hal@1.0.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-hal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/embedded-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
      "name": "embedded-io-async",
      "version": "0.6.1",
      "description": "Async embedded IO traits",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3ff09972d4073aa8c299395be75161d582e7629cd663171d62af73c8d50dba3f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-io-async@0.6.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/embedded-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-io@0.6.1",
      "name": "embedded-io",
      "version": "0.6.1",
      "description": "Embedded IO traits",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "edd0f118536f44f5ccd48bcb8b111bdc3de888b58c74639dfb034a357d0f206d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-io@0.6.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/embedded-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-nal-async@0.8.0",
      "name": "embedded-nal-async",
      "version": "0.8.0",
      "description": "An Async Network Abstraction Layer (NAL) for Embedded Systems",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "76959917cd2b86f40a98c28dd5624eddd1fa69d746241c8257eac428d83cb211"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-nal-async@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-nal-async"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-embedded-community/embedded-nal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded-community/embedded-nal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-nal@0.9.0",
      "author": "Jonathan 'theJPster' Pallant <github@thejpster.org.uk>, Mathias Koch <mk@blackbird.online>, Diego Barrios Romero <eldruin@gmail.com>, Ryan Summers <ryan.summers@vertigo-designs.com>",
      "name": "embedded-nal",
      "version": "0.9.0",
      "description": "A Network Abstraction Layer (NAL) for Embedded Systems",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c56a28be191a992f28f178ec338a0bf02f63d7803244add736d026a471e6ed77"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-nal@0.9.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-nal"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-embedded-community/embedded-nal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded-community/embedded-nal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-storage-async@0.4.1",
      "author": "Mathias Koch <mk@blackbird.online>, Ulf Lilleengen <lulf@redhat.com>, Dario Nieuwenhuis <dirbaio@dirbaio.net>, Diego Barrios Romero <eldruin@gmail.com>",
      "name": "embedded-storage-async",
      "version": "0.4.1",
      "description": "A Storage Abstraction Layer for Embedded Systems",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1763775e2323b7d5f0aa6090657f5e21cfa02ede71f5dc40eead06d64dcd15cc"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-storage-async@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-storage"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-embedded-community/embedded-storage"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded-community/embedded-storage"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-storage@0.3.1",
      "author": "Mathias Koch <mk@blackbird.online>",
      "name": "embedded-storage",
      "version": "0.3.1",
      "description": "A Storage Abstraction Layer for Embedded Systems",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a21dea9854beb860f3062d10228ce9b976da520a73474aed3171ec276bc0c032"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/embedded-storage@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/embedded-storage"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-embedded-community/embedded-storage"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded-community/embedded-storage"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#enumset@1.1.5",
      "author": "Alissa Rao <lymia@lymiahugs.com>",
      "name": "enumset",
      "version": "1.1.5",
      "description": "A library for creating compact sets of enums.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d07a4b049558765cef5f0c1a273c3fc57084d768b44d2f98127aef4cceb17293"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/enumset@1.1.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/enumset/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Lymia/enumset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#enumset_derive@0.10.0",
      "author": "Alissa Rao <lymia@lymiahugs.com>",
      "name": "enumset_derive",
      "version": "0.10.0",
      "description": "An internal helper crate for enumset. Not public API.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "59c3b24c345d8c314966bdc1832f6c2635bfcce8e7cf363bd115987bba2ee242"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/enumset_derive@0.10.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://lymia.moe/doc/enumset/enumset/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Lymia/enumset"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
      "name": "equivalent",
      "version": "1.0.2",
      "description": "Traits for key comparison in maps.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "877a4ace8713b0bcf2a4e7eec82529c029f1d0619886d18145fea96c3ffe5c0f"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/equivalent@1.0.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/indexmap-rs/equivalent"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-alloc@0.7.0",
      "name": "esp-alloc",
      "version": "0.7.0",
      "description": "A heap allocator for Espressif devices",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a78132d362cbf62ce22a1466eb9e98424f6b2d1e476e7a3cb46ca9063c5833f7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-alloc@0.7.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-backtrace@0.15.1",
      "name": "esp-backtrace",
      "version": "0.15.1",
      "description": "Bare-metal backtrace support for Espressif devices",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e4cd70abe47945c9116972781b5c05277ad855a5f5569fe2afd3e2e61a103cc0"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-backtrace@0.15.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
      "name": "esp-build",
      "version": "0.2.0",
      "description": "Build utilities for esp-hal",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8aa1c8f9954c9506699cf1ca10a2adcc226ff10b6ae3cb9e875cf2c6a0b9a372"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-build@0.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-config@0.3.1",
      "name": "esp-config",
      "version": "0.3.1",
      "description": "Configure projects using esp-hal and related packages",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "158dba334d3a2acd8d93873c0ae723ca1037cc78eefe5d6b4c5919b0ca28e38e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-config@0.3.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-hal-embassy@0.7.0",
      "name": "esp-hal-embassy",
      "version": "0.7.0",
      "description": "Embassy support for esp-hal",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b27f41110117a9bf2be385b42535c686b301c8ce3b5ea0a07567e200a63a2239"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-hal-embassy@0.7.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-hal-procmacros@0.17.0",
      "name": "esp-hal-procmacros",
      "version": "0.17.0",
      "description": "Procedural macros for esp-hal",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1bd340a20a7d546570af58fd9e2aae17466a42572680d8e70d35fc7c475c4ed8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-hal-procmacros@0.17.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-hal@1.0.0-beta.0",
      "name": "esp-hal",
      "version": "1.0.0-beta.0",
      "description": "Bare-metal HAL for Espressif devices",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e9efaa9c1324ca20a22086aba2ce47a9bdc5bd65969af8b0cd5e879603b57bef"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-hal@1.0.0-beta.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.esp-rs.org/esp-hal/"
        },
        {
          "type": "other",
          "url": "esp-hal"
        },
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-metadata@0.6.0",
      "name": "esp-metadata",
      "version": "0.6.0",
      "description": "Metadata for Espressif devices",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "30b4bffc22b7b1222c9467f0cb90eb49dcb63de810ecb3300e4b3bbc4ac2423e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-metadata@0.6.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-println@0.13.1",
      "name": "esp-println",
      "version": "0.13.1",
      "description": "Provides `print!` and `println!` implementations various Espressif devices",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "960703930f9f3c899ddedd122ea27a09d6a612c22323157e524af5b18876448e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-println@0.13.1",
      "externalReferences": [
        {
          "type": "other",
          "url": "esp-println"
        },
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-wifi-sys@0.7.1",
      "author": "The ESP-RS team",
      "name": "esp-wifi-sys",
      "version": "0.7.1",
      "description": "Bindings to Espressif's WiFi and Bluetooth low-level drivers",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c6b5438361891c431970194a733415006fb3d00b6eb70b3dcb66fd58f04d9b39"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-wifi-sys@0.7.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-wifi"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp-wifi@0.13.0",
      "name": "esp-wifi",
      "version": "0.13.0",
      "description": "A WiFi, Bluetooth and ESP-NOW driver for use with Espressif chips and bare-metal Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cd7d7ea0e2c374343a375758861e13cf618db619436bcb386dfe5529ef31e9d5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp-wifi@0.13.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.esp-rs.org/esp-hal/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-hal"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#esp32c6@0.19.0",
      "name": "esp32c6",
      "version": "0.19.0",
      "description": "Peripheral access crate for the ESP32-C6",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9ff2a4e1d1b0cb2517af20766004b8e8fb4612043f0b0569703cc90d1880ede4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/esp32c6@0.19.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/esp-rs/esp-pacs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "fnv",
      "version": "1.0.7",
      "description": "Fowler–Noll–Vo hash function",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0  OR  MIT"
        }
      ],
      "purl": "pkg:cargo/fnv@1.0.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://doc.servo.org/fnv/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/servo/rust-fnv"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#fugit@0.3.7",
      "author": "Emil Fresk <emil.fresk@gmail.com>",
      "name": "fugit",
      "version": "0.3.7",
      "description": "Time library for embedded targets with ease-of-use and performance first.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "17186ad64927d5ac8f02c1e77ccefa08ccd9eaa314d5a4772278aa204a22f7e7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/fugit@0.3.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/korken89/fugit"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
      "name": "futures-core",
      "version": "0.3.31",
      "description": "The core traits and types in for the `futures` library. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "05f29059c0c2090612e8d742178b0580d2dc940c837851ad723096f87af6663e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-core@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
      "name": "futures-sink",
      "version": "0.3.31",
      "description": "The asynchronous `Sink` trait for the futures-rs library. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e575fab7d1e0dcb8d0c7bcf9a63ee213816ab51902e6d244a95819acacf1d4f7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-sink@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
      "name": "futures-task",
      "version": "0.3.31",
      "description": "Tools for working with tasks. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f90f7dce0722e95104fcb095585910c0977252f286e354b5e3bd38902cd99988"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-task@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
      "name": "futures-util",
      "version": "0.3.31",
      "description": "Common utilities and extension traits for the futures-rs library. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9fa08315bb612088cc391249efdc3bc77536f16c91f6cf495e6fbe85b20a4a81"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/futures-util@0.3.31",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://rust-lang.github.io/futures-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/futures-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#gcd@2.3.0",
      "author": "Corey Farwell <coreyf@rwell.org>",
      "name": "gcd",
      "version": "2.3.0",
      "description": "Calculate the greatest common divisor",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1d758ba1b47b00caf47f24925c0074ecb20d6dfcffe7f6d53395c0465674841a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/gcd@2.3.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/gcd/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/frewsxcv/rust-gcd"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
      "author": "Bartłomiej Kamiński <fizyk20@gmail.com>, Aaron Trent <novacrazy@gmail.com>",
      "name": "generic-array",
      "version": "0.14.7",
      "description": "Generic types implementing functionality of arrays",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "85649ca51fd72272d7821adaf274ad91c288277713d9c18820d8499a7ff69e9a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/generic-array@0.14.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "http://fizyk20.github.io/generic-array/generic_array/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/fizyk20/generic-array.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
      "author": "The Rand Project Developers",
      "name": "getrandom",
      "version": "0.2.15",
      "description": "A small cross-platform library for retrieving random data from system source",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c4567c8db10ae91089c99af84c68c38da3ec2f087c3f82960bcdbf3656b6f4d7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/getrandom@0.2.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/getrandom"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/getrandom"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hash32@0.3.1",
      "author": "Jorge Aparicio <jorge@japaric.io>",
      "name": "hash32",
      "version": "0.3.1",
      "description": "32-bit hashing algorithms",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "47d60b12902ba28e2730cd37e95b8c9223af2808df9e902d4df49588d1470606"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hash32@0.3.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/japaric/hash32"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
      "author": "Amanieu d'Antras <amanieu@gmail.com>",
      "name": "hashbrown",
      "version": "0.15.2",
      "description": "A Rust port of Google's SwissTable hash map",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "bf151400ff0baff5465007dd2f3e717f3fe502074ca563069ce3a6629d07b289"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hashbrown@0.15.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/hashbrown"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
      "author": "Jorge Aparicio <jorge@japaric.io>, Per Lindgren <per.lindgren@ltu.se>, Emil Fresk <emil.fresk@gmail.com>",
      "name": "heapless",
      "version": "0.8.0",
      "description": "`static` friendly data structures that don't require dynamic memory allocation",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0bfb9eb618601c89945a70e254898da93b13be0388091d42117462b265bb3fad"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/heapless@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/heapless"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/heapless"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
      "name": "heck",
      "version": "0.5.0",
      "description": "heck is a case conversion library.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/heck@0.5.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/withoutboats/heck"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
      "author": "KokaKiwi <kokakiwi@kokakiwi.net>",
      "name": "hex",
      "version": "0.4.3",
      "description": "Encoding and decoding data into/from hexadecimal representation.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7f24254aa9a54b5c858eaee2f5bccdb46aaf0e486a595ed5fd8f86ba55232a70"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hex@0.4.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hex/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/KokaKiwi/rust-hex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
      "author": "RustCrypto Developers",
      "name": "hmac",
      "version": "0.12.1",
      "description": "Generic implementation of Hash-based Message Authentication Code (HMAC)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6c49c37c09c17a53d937dfbb742eb3a961d65a994e6bcdcf37e7399d0cc8ab5e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/hmac@0.12.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/hmac"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/MACs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
      "author": "Ted Driggs <ted.driggs@outlook.com>",
      "name": "ident_case",
      "version": "1.0.1",
      "description": "Utility for applying case rules to Rust identifiers.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ident_case@1.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/ident_case/1.0.1"
        },
        {
          "type": "vcs",
          "url": "https://github.com/TedDriggs/ident_case"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
      "name": "indexmap",
      "version": "2.7.1",
      "description": "A hash table with consistent order and fast iteration.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8c9c992b02b5b4c94ea26e32fe5bccb7aa7d9f390ab5c1221ff895bc7ea8b652"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/indexmap@2.7.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indexmap/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/indexmap-rs/indexmap"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.5",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "indoc",
      "version": "2.0.5",
      "description": "Indented document literals",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/indoc@2.0.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/indoc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/indoc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4",
      "author": "RustCrypto Developers",
      "name": "inout",
      "version": "0.1.4",
      "description": "Custom reference types for code generic over in-place and buffer-to-buffer modes of operation.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "879f10e63c20629ecabbb64a8010319738c66a5cd0c29b02d63d272b03751d01"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/inout@0.1.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/inout"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#instability@0.3.7",
      "author": "Stephen M. Coakley <me@stephencoakley.com>, The Ratatui Developers",
      "name": "instability",
      "version": "0.3.7",
      "description": "Rust API stability attributes for the rest of us. A fork of the `stability` crate.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0bf9fed6d91cfb734e7476a06bde8300a1b94e217e1b523b6f0cd1a01998c71d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/instability@0.3.7",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/instability/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/ratatui-org/instability"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170",
      "author": "The Rust Project Developers",
      "name": "libc",
      "version": "0.2.170",
      "description": "Raw FFI bindings to platform libraries like libc. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "875b3680cb2f8f71bdcf9a30f38d48282f5d3c95cbf9b3fa57269bb5d5c06828"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/libc@0.2.170",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/libc/"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-lang/libc"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/libc"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
      "author": "Jorge Aparicio <jorge@japaric.io>",
      "name": "libm",
      "version": "0.2.11",
      "description": "libm in pure Rust",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8355be11b20d696c8f18f6cc018c4e372165b1fa8126cef092399c9951984ffa"
        }
      ],
      "licenses": [
        {
          "expression": "MIT AND (MIT OR Apache-2.0)"
        }
      ],
      "purl": "pkg:cargo/libm@0.2.11",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/libm"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/libm"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#linked_list_allocator@0.10.5",
      "author": "Philipp Oppermann <dev@phil-opp.com>",
      "name": "linked_list_allocator",
      "version": "0.10.5",
      "description": "Simple allocator usable for no_std systems. It builds a linked list from the freed blocks and thus needs no additional data structures.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "9afa463f5405ee81cdb9cc2baf37e08ec7e4c8209442b5d72c04cfb2cd6e6286"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/linked_list_allocator@0.10.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/crate/linked_list_allocator"
        },
        {
          "type": "website",
          "url": "http://os.phil-opp.com/kernel-heap.html#a-better-allocator"
        },
        {
          "type": "vcs",
          "url": "https://github.com/phil-opp/linked-list-allocator"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
      "author": "Lukas Kalbertodt <lukas.kalbertodt@gmail.com>",
      "name": "litrs",
      "version": "0.4.1",
      "description": "Parse and inspect Rust literals (i.e. tokens in the Rust programming language representing fixed values). Particularly useful for proc macros, but can also be used outside of a proc-macro context. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "b4ce301924b7887e9d637144fdade93f9dfff9b60981d4ac161db09720d39aa5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/litrs@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/litrs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/LukasKalbertodt/litrs/"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
      "author": "The Rust Project Developers",
      "name": "log",
      "version": "0.4.26",
      "description": "A lightweight logging facade for Rust ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "30bde2b3dc3671ae49d8e2e9f044c7c005836e7a023ee57cffa25ab82764bb9e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/log@0.4.26",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/log"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang/log"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#managed@0.8.0",
      "author": "whitequark <whitequark@whitequark.org>",
      "name": "managed",
      "version": "0.8.0",
      "description": "An interface for logically owning objects, whether or not heap allocation is available.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0ca88d725a0a943b096803bd34e73a4437208b6077654cc4ecb2947a5f91618d"
        }
      ],
      "licenses": [
        {
          "expression": "0BSD"
        }
      ],
      "purl": "pkg:cargo/managed@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/managed/"
        },
        {
          "type": "website",
          "url": "https://github.com/m-labs/rust-managed"
        },
        {
          "type": "vcs",
          "url": "https://github.com/m-labs/rust-managed.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
      "author": "Andrew Gallant <jamslam@gmail.com>, bluss",
      "name": "memchr",
      "version": "2.7.4",
      "description": "Provides extremely fast (uses SIMD on x86_64, aarch64 and wasm32) routines for 1, 2 or 3 byte search and single substring search. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "78ca9ab1a0babb1e7d5695e3530886289c18cf2f87ec19a575a0abdce112e3a3"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/memchr@2.7.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/memchr/"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/memchr"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/memchr"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#nb@0.1.3",
      "author": "Jorge Aparicio <jorge@japaric.io>",
      "name": "nb",
      "version": "0.1.3",
      "description": "Minimal non-blocking I/O layer",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "801d31da0513b6ec5214e9bf433a77966320625a37860f910be265be6e18d06f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/nb@0.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/nb"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-embedded/nb"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/nb"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0",
      "author": "Jorge Aparicio <jorge@japaric.io>",
      "name": "nb",
      "version": "1.1.0",
      "description": "Minimal non-blocking I/O layer",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8d5439c4ad607c3c23abf66de8c8bf57ba8adcd1f129e699851a6e43935d339d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/nb@1.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/nb"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-embedded/nb"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-embedded/nb"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.4.2",
      "author": "The Rust Project Developers",
      "name": "num-derive",
      "version": "0.4.2",
      "description": "Numeric syntax extensions",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ed3955f1a9c7c0c15e092f9c887db08b1fc683305fdf6eb6684f22555355e202"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-derive@0.4.2",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-derive"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-derive"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-derive"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
      "author": "The Rust Project Developers",
      "name": "num-traits",
      "version": "0.2.19",
      "description": "Numeric traits for generic mathematics",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "071dfc062690e90b734c0b2273ce72ad0ffa95f0c74596bc250dcfd960262841"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num-traits@0.2.19",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/num-traits"
        },
        {
          "type": "website",
          "url": "https://github.com/rust-num/num-traits"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-num/num-traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num_enum@0.7.3",
      "author": "Daniel Wagner-Hall <dawagner@gmail.com>, Daniel Henry-Mantilla <daniel.henry.mantilla@gmail.com>, Vincent Esche <regexident@gmail.com>",
      "name": "num_enum",
      "version": "0.7.3",
      "description": "Procedural macros to make inter-operation between primitives and enums easier.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4e613fc340b2220f734a8595782c551f1250e969d87d3be1ae0579e8d4065179"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause OR MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num_enum@0.7.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/illicitonion/num_enum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#num_enum_derive@0.7.3",
      "author": "Daniel Wagner-Hall <dawagner@gmail.com>, Daniel Henry-Mantilla <daniel.henry.mantilla@gmail.com>, Vincent Esche <regexident@gmail.com>",
      "name": "num_enum_derive",
      "version": "0.7.3",
      "description": "Internal implementation details for ::num_enum (Procedural macros to make inter-operation between primitives and enums easier)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "af1844ef2428cc3e1cb900be36181049ef3d3193c63e43026cfe202983b27a56"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause OR MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/num_enum_derive@0.7.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/illicitonion/num_enum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#object@0.36.7",
      "name": "object",
      "version": "0.36.7",
      "description": "A unified interface for reading and writing object file formats.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "62948e14d923ea95ea2c7c86c71013138b66525b86bdc08d2dcc262bdb497b87"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/object@0.36.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/gimli-rs/object"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
      "author": "RustCrypto Developers",
      "name": "opaque-debug",
      "version": "0.3.1",
      "description": "Macro for opaque Debug trait implementation",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c08d65885ee38876c4f86fa503fb49d7b507c2b62552df7c70b2fce627e06381"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/opaque-debug@0.3.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/opaque-debug"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "paste",
      "version": "1.0.15",
      "description": "Macros for all your token pasting needs",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "57c0d7b74b563b49d38dae00a0c37d4d6de9b432382b2892f0574ddcae73fd0a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/paste@1.0.15",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/paste"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/paste"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
      "author": "RustCrypto Developers",
      "name": "pem-rfc7468",
      "version": "0.7.0",
      "description": "PEM Encoding (RFC 7468) for PKIX, PKCS, and CMS Structures, implementing a strict subset of the original Privacy-Enhanced Mail encoding intended specifically for use with cryptographic keys, certificates, and other messages. Provides a no_std-friendly, constant-time implementation suitable for use with cryptographic private keys. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "88b39c9bfcfc231068454382784bb460aae594343fb030d46e9f50a645418412"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pem-rfc7468@0.7.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/formats/tree/master/pem-rfc7468"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
      "name": "pin-project-lite",
      "version": "0.2.16",
      "description": "A lightweight version of pin-project written with declarative macros. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3b3cff922bd51709b605d9ead9aa71031d81447142d828eb4a6eba76fe619f9b"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/pin-project-lite@0.2.16",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/pin-project-lite"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
      "author": "Josef Brandl <mail@josefbrandl.de>",
      "name": "pin-utils",
      "version": "0.1.0",
      "description": "Utilities for pinning ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/pin-utils@0.1.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pin-utils"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-lang-nursery/pin-utils"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
      "author": "RustCrypto Developers",
      "name": "poly1305",
      "version": "0.8.0",
      "description": "The Poly1305 universal hash function and message authentication code",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8159bd90725d2df49889a078b54f4f79e87f1f8a8444194cdca81d38f5393abf"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/poly1305@0.8.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/poly1305"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/universal-hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
      "name": "portable-atomic",
      "version": "1.11.0",
      "description": "Portable atomic types including support for 128-bit atomics, atomic float, etc. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "350e9b48cbc6b0e028b0473b114454c6316e57336ee184ceab6e53f72c178b3e"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/portable-atomic@1.11.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/taiki-e/portable-atomic"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#portable_atomic_enum@0.3.1",
      "author": "Thomas Bächler <thomas.baechler@gmx.de>, Dániel Buga <bugadani@gmail.com>",
      "name": "portable_atomic_enum",
      "version": "0.3.1",
      "description": "An attribute to create an portable atomic wrapper around a C-style enum",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "30d48f60c43e0120bb2bb48589a16d4bed2f4b911be41e299f2d0fc0e0e20885"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/portable_atomic_enum@0.3.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/bugadani/portable_atomic_enum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#portable_atomic_enum_macros@0.2.1",
      "author": "Thomas Bächler <thomas.baechler@gmx.de>, Dániel Buga <bugadani@gmail.com>",
      "name": "portable_atomic_enum_macros",
      "version": "0.2.1",
      "description": "An attribute to create an portable atomic wrapper around a C-style enum",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a33fa6ec7f2047f572d49317cca19c87195de99c6e5b6ee492da701cfe02b053"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/portable_atomic_enum_macros@0.2.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/bugadani/portable_atomic_enum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#pretty-hex@0.4.1",
      "author": "Andrei Volnin <wolandr@gmail.com>",
      "name": "pretty-hex",
      "version": "0.4.1",
      "description": "Pretty hex dump of bytes slice in the common style.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "bbc83ee4a840062f368f9096d80077a9841ec117e17e7f700df81958f1451254"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/pretty-hex@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/pretty-hex"
        },
        {
          "type": "website",
          "url": "https://github.com/wolandr/pretty-hex"
        },
        {
          "type": "vcs",
          "url": "https://github.com/wolandr/pretty-hex"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@3.2.0",
      "author": "Bastian Köcher <git@kchr.de>",
      "name": "proc-macro-crate",
      "version": "3.2.0",
      "description": "Replacement for crate (macro_rules keyword) in proc-macros ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8ecf48c7ca261d60b74ab1a7b20da18bede46776b2e55535cb958eb595c5fa7b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-crate@3.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/proc-macro-crate"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bkchr/proc-macro-crate"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0",
      "author": "CreepySkeleton <creepy-skeleton@yandex.ru>, GnomedDev <david2005thomas@gmail.com>",
      "name": "proc-macro-error-attr2",
      "version": "2.0.0",
      "description": "Attribute macro for the proc-macro-error2 crate",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "96de42df36bb9bba5542fe9f1a054b8cc87e172759a1868aa05c1f3acc89dfc5"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-error-attr2@2.0.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/GnomedDev/proc-macro-error-2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1",
      "author": "CreepySkeleton <creepy-skeleton@yandex.ru>, GnomedDev <david2005thomas@gmail.com>",
      "name": "proc-macro-error2",
      "version": "2.0.1",
      "description": "Almost drop-in replacement to panics in proc-macros",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "11ec05c52be0a07b08061f7dd003e7d7092e0472bc731b4af7bb1ef876109802"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro-error2@2.0.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/GnomedDev/proc-macro-error-2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
      "author": "David Tolnay <dtolnay@gmail.com>, Alex Crichton <alex@alexcrichton.com>",
      "name": "proc-macro2",
      "version": "1.0.93",
      "description": "A substitute implementation of the compiler's `proc_macro` API to decouple token-based libraries from the procedural macro use case.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "60946a68e5f9d28b0dc1c21bb8a97ee7d018a8b322fa57838ba31cc878e22d99"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/proc-macro2@1.0.93",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/proc-macro2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/proc-macro2"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "quote",
      "version": "1.0.38",
      "description": "Quasi-quoting macro quote!(...)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/quote@1.0.38",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/quote/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/quote"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
      "author": "The Rand Project Developers, The Rust Project Developers",
      "name": "rand_core",
      "version": "0.6.4",
      "description": "Core random number generator traits and tools for implementation. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rand_core@0.6.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rand_core"
        },
        {
          "type": "website",
          "url": "https://rust-random.github.io/book"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rust-random/rand"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
      "name": "rustc_version",
      "version": "0.4.1",
      "description": "A library for querying the version of a installed rustc compiler",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "cfcb3a22ef46e85b45de6ee7e79d063319ebb6594faafcf1c225ea92ab6e9b92"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustc_version@0.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustc_version/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/djc/rustc-version-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.19",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "rustversion",
      "version": "1.0.19",
      "description": "Conditional compilation according to rustc compiler version",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f7c45b9784283f1b2e7fb61b42047c2fd678ef0960d4f6f1eba131594cc369d4"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/rustversion@1.0.19",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/rustversion"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/rustversion"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.25",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "semver",
      "version": "1.0.25",
      "description": "Parser and evaluator for Cargo's flavor of Semantic Versioning",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f79dfe2d285b0488816f30e700a7438c5a73d816b5b7d3ac72fbc48b0d185e03"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/semver@1.0.25",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/semver"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/semver"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218",
      "author": "Erick Tryzelaar <erick.tryzelaar@gmail.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "serde",
      "version": "1.0.218",
      "description": "A generic serialization/deserialization framework",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e8dfc9d19bdbf6d17e22319da49161d5d0108e4188e8b680aef6299eed22df60"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde@1.0.218",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/serde"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.218",
      "author": "Erick Tryzelaar <erick.tryzelaar@gmail.com>, David Tolnay <dtolnay@gmail.com>",
      "name": "serde_derive",
      "version": "1.0.218",
      "description": "Macros 1.1 implementation of #[derive(Serialize, Deserialize)]",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f09503e191f4e797cb8aac08e9a4a4695c5edf6a2e70e376d961ddd5c969f82b"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_derive@1.0.218",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://serde.rs/derive.html"
        },
        {
          "type": "website",
          "url": "https://serde.rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/serde-rs/serde"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.8",
      "name": "serde_spanned",
      "version": "0.6.8",
      "description": "Serde-compatible spanned Value",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "87607cb1398ed59d48732e575a4c28a7a8ebf2454b964fe3f224f2afc07909e1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/serde_spanned@0.6.8",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/toml-rs/toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
      "author": "RustCrypto Developers",
      "name": "sha2",
      "version": "0.10.8",
      "description": "Pure Rust implementation of the SHA-2 hash function family including SHA-224, SHA-256, SHA-384, and SHA-512. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "793db75ad2bcafc3ffa7c68b215fee268f537982cd901d132f89c6343f3a3dc8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/sha2@0.10.8",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/sha2"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/hashes"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
      "author": "RustCrypto Developers",
      "name": "signature",
      "version": "2.2.0",
      "description": "Traits for cryptographic signature algorithms (e.g. ECDSA, Ed25519)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "77549399552de45a898a580c1b41d445bf730df867cc44e6c0233bbc4b8329de"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/signature@2.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/signature"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits/tree/master/signature"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#smoltcp@0.12.0",
      "author": "whitequark <whitequark@whitequark.org>",
      "name": "smoltcp",
      "version": "0.12.0",
      "description": "A TCP/IP stack designed for bare-metal, real-time systems without a heap.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "dad095989c1533c1c266d9b1e8d70a1329dd3723c3edac6d03bbd67e7bf6f4bb"
        }
      ],
      "licenses": [
        {
          "expression": "0BSD"
        }
      ],
      "purl": "pkg:cargo/smoltcp@0.12.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/smoltcp/"
        },
        {
          "type": "website",
          "url": "https://github.com/smoltcp-rs/smoltcp"
        },
        {
          "type": "vcs",
          "url": "https://github.com/smoltcp-rs/smoltcp.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#snafu-derive@0.8.5",
      "author": "Jake Goulding <jake.goulding@gmail.com>",
      "name": "snafu-derive",
      "version": "0.8.5",
      "description": "An ergonomic error handling library",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "03c3c6b7927ffe7ecaa769ee0e3994da3b8cafc8f444578982c83ecb161af917"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/snafu-derive@0.8.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/snafu"
        },
        {
          "type": "vcs",
          "url": "https://github.com/shepmaster/snafu"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#snafu@0.8.5",
      "author": "Jake Goulding <jake.goulding@gmail.com>",
      "name": "snafu",
      "version": "0.8.5",
      "description": "An ergonomic error handling library",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "223891c85e2a29c3fe8fb900c1fae5e69c2e42415e3177752e8718475efa5019"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/snafu@0.8.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/snafu"
        },
        {
          "type": "vcs",
          "url": "https://github.com/shepmaster/snafu"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssh-cipher@0.2.0",
      "author": "RustCrypto Developers",
      "name": "ssh-cipher",
      "version": "0.2.0",
      "description": "Pure Rust implementation of SSH symmetric encryption including support for the modern aes128-gcm@openssh.com/aes256-gcm@openssh.com and chacha20-poly1305@openssh.com algorithms as well as legacy support for older ciphers. Built on the pure Rust cryptography implementations maintained by the RustCrypto organization. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "caac132742f0d33c3af65bfcde7f6aa8f62f0e991d80db99149eb9d44708784f"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ssh-cipher@0.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/SSH/tree/master/ssh-cipher"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssh-encoding@0.2.0",
      "author": "RustCrypto Developers",
      "name": "ssh-encoding",
      "version": "0.2.0",
      "description": "Pure Rust implementation of SSH data type decoders/encoders as described in RFC4251 ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "eb9242b9ef4108a78e8cd1a2c98e193ef372437f8c22be363075233321dd4a15"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ssh-encoding@0.2.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/SSH/tree/master/ssh-encoding"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ssh-key@0.6.7",
      "author": "RustCrypto Developers",
      "name": "ssh-key",
      "version": "0.6.7",
      "description": "Pure Rust implementation of SSH key file format decoders/encoders as described in RFC4251/RFC4253 and OpenSSH key formats, as well as \"sshsig\" signatures and certificates (including certificate validation and certificate authority support), with further support for the `authorized_keys` and `known_hosts` file formats. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3b86f5297f0f04d08cabaa0f6bff7cb6aec4d9c3b49d87990d63da9d9156a8c3"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/ssh-key@0.6.7",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/SSH/tree/master/ssh-key"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
      "author": "Robert Grosse <n210241048576@gmail.com>",
      "name": "stable_deref_trait",
      "version": "1.2.0",
      "description": "An unsafe marker trait for types like Box and Rc that dereference to a stable address even when moved, and hence can be used with libraries such as owning_ref and rental. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "a8f112729512f8e442d81f95a8a7ddf2b7c6b8a1a6f509a95864142b30cab2d3"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/stable_deref_trait@1.2.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/stable_deref_trait/1.2.0/stable_deref_trait"
        },
        {
          "type": "vcs",
          "url": "https://github.com/storyyeller/stable_deref_trait"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#static_cell@2.1.0",
      "name": "static_cell",
      "version": "2.1.0",
      "description": "Statically allocated, initialized at runtime cell.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "d89b0684884a883431282db1e4343f34afc2ff6996fe1f4a1664519b66e14c1e"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/static_cell@2.1.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/embassy-rs/static-cell"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
      "author": "Danny Guo <danny@dannyguo.com>, maxbachmann <oss@maxbachmann.de>",
      "name": "strsim",
      "version": "0.11.1",
      "description": "Implementations of string similarity metrics. Includes Hamming, Levenshtein, OSA, Damerau-Levenshtein, Jaro, Jaro-Winkler, and Sørensen-Dice. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "7da8b5736845d9f2fcb837ea5d9e2628564b3b043a70948a3f0b778838c5fb4f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strsim@0.11.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strsim/"
        },
        {
          "type": "website",
          "url": "https://github.com/rapidfuzz/strsim-rs"
        },
        {
          "type": "vcs",
          "url": "https://github.com/rapidfuzz/strsim-rs"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strum@0.26.3",
      "author": "Peter Glotfelty <peter.glotfelty@microsoft.com>",
      "name": "strum",
      "version": "0.26.3",
      "description": "Helpful macros for working with enums and strings",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "8fec0f0aef304996cf250b31b5a10dee7980c85da9d759361292b8bca5a18f06"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strum@0.26.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strum"
        },
        {
          "type": "website",
          "url": "https://github.com/Peternator7/strum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Peternator7/strum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strum@0.27.1",
      "author": "Peter Glotfelty <peter.glotfelty@microsoft.com>",
      "name": "strum",
      "version": "0.27.1",
      "description": "Helpful macros for working with enums and strings",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "f64def088c51c9510a8579e3c5d67c65349dcf755e5479ad3d010aa6454e2c32"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strum@0.27.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strum"
        },
        {
          "type": "website",
          "url": "https://github.com/Peternator7/strum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Peternator7/strum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.26.4",
      "author": "Peter Glotfelty <peter.glotfelty@microsoft.com>",
      "name": "strum_macros",
      "version": "0.26.4",
      "description": "Helpful macros for working with enums and strings",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "4c6bee85a5a24955dc440386795aa378cd9cf82acd5f764469152d2270e581be"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strum_macros@0.26.4",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strum"
        },
        {
          "type": "website",
          "url": "https://github.com/Peternator7/strum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Peternator7/strum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.27.1",
      "author": "Peter Glotfelty <peter.glotfelty@microsoft.com>",
      "name": "strum_macros",
      "version": "0.27.1",
      "description": "Helpful macros for working with enums and strings",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c77a8c5abcaf0f9ce05d62342b7d298c346515365c36b673df4ebe3ced01fde8"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/strum_macros@0.27.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/strum"
        },
        {
          "type": "website",
          "url": "https://github.com/Peternator7/strum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/Peternator7/strum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
      "author": "Isis Lovecruft <isis@patternsinthevoid.net>, Henry de Valence <hdevalence@hdevalence.ca>",
      "name": "subtle",
      "version": "2.6.1",
      "description": "Pure-Rust traits and utilities for constant-time cryptographic implementations.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "13c2bddecc57b384dee18652358fb23172facb8a2c51ccc10d74c157bdea3292"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/subtle@2.6.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/subtle"
        },
        {
          "type": "website",
          "url": "https://dalek.rs/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/subtle"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "syn",
      "version": "2.0.98",
      "description": "Parser for Rust source code",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "36147f1a48ae0ec2b5b3bc5b537d267457555a10dc06f3dbc8cb11ba3006d3b1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/syn@2.0.98",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/syn"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/syn"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
      "author": "Andrew Gallant <jamslam@gmail.com>",
      "name": "termcolor",
      "version": "1.4.1",
      "description": "A simple cross platform library for writing colored text to a terminal. ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "06794f8f6c5c898b3275aebefa6b8a1cb24cd2c6c79397ab15774837a0bc5755"
        }
      ],
      "licenses": [
        {
          "expression": "Unlicense OR MIT"
        }
      ],
      "purl": "pkg:cargo/termcolor@1.4.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/termcolor"
        },
        {
          "type": "website",
          "url": "https://github.com/BurntSushi/termcolor"
        },
        {
          "type": "vcs",
          "url": "https://github.com/BurntSushi/termcolor"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
      "author": "Alex Crichton <alex@alexcrichton.com>",
      "name": "toml_datetime",
      "version": "0.6.8",
      "description": "A TOML-compatible datetime type",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0dd7358ecb8fc2f8d014bf86f6f638ce72ba252a2c3a2572f2a795f1d23efb41"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/toml_datetime@0.6.8",
      "externalReferences": [
        {
          "type": "website",
          "url": "https://github.com/toml-rs/toml"
        },
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.24",
      "author": "Andronik Ordian <write@reusable.software>, Ed Page <eopage@gmail.com>",
      "name": "toml_edit",
      "version": "0.22.24",
      "description": "Yet another format-preserving TOML parser.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "17b4795ff5edd201c7cd6dca065ae59972ce77d1b80fa0a84d94950ece7d1474"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/toml_edit@0.22.24",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/toml-rs/toml"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
      "author": "Paho Lurie-Gregg <paho@paholg.com>, Andre Bogus <bogusandre@gmail.com>",
      "name": "typenum",
      "version": "1.18.0",
      "description": "Typenum is a Rust library for type-level numbers evaluated at     compile time. It currently supports bits, unsigned integers, and signed     integers. It also provides a type-level array of type-level numbers, but its     implementation is incomplete.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "1dccffe3ce07af9386bfd29e80c0ab1a8205a2fc34e4bcd40364df902cfa8f3f"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/typenum@1.18.0",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/typenum"
        },
        {
          "type": "vcs",
          "url": "https://github.com/paholg/typenum"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#ufmt-write@0.1.0",
      "author": "Jorge Aparicio <jorge@japaric.io>",
      "name": "ufmt-write",
      "version": "0.1.0",
      "description": "`μfmt`'s `uWrite` trait",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "e87a2ed6b42ec5e28cc3b94c09982969e9227600b2e3dcbc1db927a84c06bd69"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/ufmt-write@0.1.0",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/japaric/ufmt"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.17",
      "author": "David Tolnay <dtolnay@gmail.com>",
      "name": "unicode-ident",
      "version": "1.0.17",
      "description": "Determine whether characters have the XID_Start or XID_Continue properties according to Unicode Standard Annex #31",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "00e2473a93778eb0bad35909dff6a10d28e63f792f16ed15e404fca9d5eeedbe"
        }
      ],
      "licenses": [
        {
          "expression": "(MIT OR Apache-2.0) AND Unicode-3.0"
        }
      ],
      "purl": "pkg:cargo/unicode-ident@1.0.17",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/unicode-ident"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dtolnay/unicode-ident"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1",
      "author": "RustCrypto Developers",
      "name": "universal-hash",
      "version": "0.5.1",
      "description": "Traits which describe the functionality of universal hash functions (UHFs)",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "fc1de2c688dc15305988b563c3854064043356019f97a4b46276fe734c4f07ea"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/universal-hash@0.5.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/universal-hash"
        },
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/traits"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#vcell@0.1.3",
      "author": "Jorge Aparicio <japaricious@gmail.com>",
      "name": "vcell",
      "version": "0.1.3",
      "description": "`Cell` with volatile read / write operations",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "77439c1b53d2303b20d9459b1ade71a83c716e3f9c34f3228c00e6f185d6c002"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/vcell@0.1.3",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/vcell"
        },
        {
          "type": "vcs",
          "url": "https://github.com/japaric/vcell"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
      "author": "Sergio Benitez <sb@sergio.bz>",
      "name": "version_check",
      "version": "0.9.5",
      "description": "Tiny crate to check the version of the installed/running rustc.",
      "scope": "excluded",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0b928f33d975fc6ad9f86c8f283853ad26bdd5b10b7f1542aa2fa15e2289105a"
        }
      ],
      "licenses": [
        {
          "expression": "MIT OR Apache-2.0"
        }
      ],
      "purl": "pkg:cargo/version_check@0.9.5",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/version_check/"
        },
        {
          "type": "vcs",
          "url": "https://github.com/SergioBenitez/version_check"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#virtue@0.0.16",
      "name": "virtue",
      "version": "0.0.16",
      "description": "A sinless derive macro helper",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "3b6826a786a78cf1bb0937507b5551fb6f827d66269a24b00af0de247b19bbc7"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/virtue@0.0.16",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/virtue"
        },
        {
          "type": "vcs",
          "url": "https://github.com/bincode-org/virtue"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#void@1.0.2",
      "author": "Jonathan Reem <jonathan.reem@gmail.com>",
      "name": "void",
      "version": "1.0.2",
      "description": "The uninhabited void type for use in statically impossible cases.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "6a02e4885ed3bc0f2de90ea6dd45ebcbb66dacffe03547fadbb0eeae2770887d"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/void@1.0.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/reem/rust-void.git"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.3",
      "name": "winnow",
      "version": "0.7.3",
      "description": "A byte-oriented, zero-copy, parser combinators library",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "0e7f4ea97f6f78012141bcdb6a216b2609f0979ada50b20ca5b52dde2eac2bb1"
        }
      ],
      "licenses": [
        {
          "expression": "MIT"
        }
      ],
      "purl": "pkg:cargo/winnow@0.7.3",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/winnow-rs/winnow"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#x25519-dalek@2.0.1",
      "author": "Isis Lovecruft <isis@patternsinthevoid.net>, DebugSteven <debugsteven@gmail.com>, Henry de Valence <hdevalence@hdevalence.ca>",
      "name": "x25519-dalek",
      "version": "2.0.1",
      "description": "X25519 elliptic curve Diffie-Hellman key exchange in pure-Rust, using curve25519-dalek.",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "c7e468321c81fb07fa7f4c636c3972b9100f0346e5b6a9f2bd0603a52f7ed277"
        }
      ],
      "licenses": [
        {
          "expression": "BSD-3-Clause"
        }
      ],
      "purl": "pkg:cargo/x25519-dalek@2.0.1",
      "externalReferences": [
        {
          "type": "documentation",
          "url": "https://docs.rs/x25519-dalek"
        },
        {
          "type": "website",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek"
        },
        {
          "type": "vcs",
          "url": "https://github.com/dalek-cryptography/curve25519-dalek/tree/main/x25519-dalek"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
      "author": "The RustCrypto Project Developers",
      "name": "zeroize",
      "version": "1.8.1",
      "description": "Securely clear secrets from memory with a simple trait built on stable Rust primitives which guarantee memory is zeroed using an operation will not be 'optimized away' by the compiler. Uses a portable pure Rust implementation that works everywhere, even WASM! ",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ced3678a2879b30306d323f4542626697a464a97c0a07c9aebf7ebca65cd4dde"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zeroize@1.8.1",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils/tree/master/zeroize"
        }
      ]
    },
    {
      "type": "library",
      "bom-ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2",
      "author": "The RustCrypto Project Developers",
      "name": "zeroize_derive",
      "version": "1.4.2",
      "description": "Custom derive support for zeroize",
      "scope": "required",
      "hashes": [
        {
          "alg": "SHA-256",
          "content": "ce36e65b0d2999d2aafac989fb249189a141aee1f53c612c1f37d72631959f69"
        }
      ],
      "licenses": [
        {
          "expression": "Apache-2.0 OR MIT"
        }
      ],
      "purl": "pkg:cargo/zeroize_derive@1.4.2",
      "externalReferences": [
        {
          "type": "vcs",
          "url": "https://github.com/RustCrypto/utils/tree/master/zeroize/derive"
        }
      ]
    }
  ],
  "dependencies": [
    {
      "ref": "git+https://github.com/mkj/sunset#0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
        "registry+https://github.com/rust-lang/crates.io-index#ascii@1.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
        "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#pretty-hex@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#snafu@0.8.5",
        "registry+https://github.com/rust-lang/crates.io-index#ssh-key@0.6.7",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "git+https://github.com/mkj/sunset#sunset-sshwire-derive@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#x25519-dalek@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "git+https://github.com/mkj/sunset#sunset-embassy@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#atomic-polyfill@1.0.3",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
        "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
        "git+https://github.com/mkj/sunset#0.2.0"
      ]
    },
    {
      "ref": "git+https://github.com/mkj/sunset#sunset-sshwire-derive@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#virtue@0.0.16"
      ]
    },
    {
      "ref": "path+file:///Users/rvalls/dev/personal/ssh-stamp#esp-ssh-rs@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#edge-dhcp@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#edge-nal@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#edge-nal-embassy@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-executor@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-net@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#esp-alloc@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-backtrace@0.15.1",
        "registry+https://github.com/rust-lang/crates.io-index#esp-hal@1.0.0-beta.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-hal-embassy@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-println@0.13.1",
        "registry+https://github.com/rust-lang/crates.io-index#esp-wifi@0.13.0",
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
        "registry+https://github.com/rust-lang/crates.io-index#smoltcp@0.12.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssh-key@0.6.7",
        "registry+https://github.com/rust-lang/crates.io-index#static_cell@2.1.0",
        "git+https://github.com/mkj/sunset#0.2.0",
        "git+https://github.com/mkj/sunset#sunset-embassy@0.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#aes@0.8.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.96",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ascii@1.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#atomic-polyfill@1.0.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.6.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#basic-toml@0.1.9",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitfield-macros@0.18.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitfield@0.18.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitfield-macros@0.18.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.8.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.21.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#chacha20@0.9.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.40",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ctr@0.9.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
        "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.10"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
        "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#darling_macro@0.20.10",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling_core@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#delegate@0.13.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#block-buffer@0.10.4",
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.1.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ed25519@2.2.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#edge-dhcp@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#edge-nal@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#edge-raw@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
        "registry+https://github.com/rust-lang/crates.io-index#num_enum@0.7.3",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#edge-nal-embassy@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#edge-nal@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-net@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#edge-nal@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#edge-raw@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-embedded-hal@0.3.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@0.2.7",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal-async@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-storage@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-storage-async@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-executor-macros@0.6.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-executor@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-executor-macros@0.6.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-net-driver@0.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-net@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-net-driver@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-nal-async@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#managed@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#smoltcp@0.12.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.5.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-time-driver@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-time-queue-utils@0.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embassy-executor@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time-driver@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@0.2.7",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal-async@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-can@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-hal-async@1.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@1.0.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@0.2.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#nb@0.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#void@1.0.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@1.0.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io@0.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-io@0.6.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-nal-async@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-nal@0.9.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-nal@0.9.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-storage-async@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#embedded-storage@0.3.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#embedded-storage@0.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#enumset@1.1.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#enumset_derive@0.10.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#enumset_derive@0.10.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-alloc@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#enumset@1.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#linked_list_allocator@0.10.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-backtrace@0.15.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-println@0.13.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98",
        "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-config@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-hal-embassy@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-executor@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time@0.4.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time-driver@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-time-queue-utils@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-config@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#esp-hal@1.0.0-beta.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-hal-procmacros@0.17.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-metadata@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#static_cell@2.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-hal-procmacros@0.17.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#object@0.36.7",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@3.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-hal@1.0.0-beta.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#basic-toml@0.1.9",
        "registry+https://github.com/rust-lang/crates.io-index#bitfield@0.18.1",
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@2.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#bytemuck@1.21.0",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#chrono@0.4.40",
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#delegate@0.13.2",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-embedded-hal@0.3.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-futures@0.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-can@0.4.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-hal-async@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#enumset@1.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-config@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#esp-hal-procmacros@0.17.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-metadata@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp32c6@0.19.0",
        "registry+https://github.com/rust-lang/crates.io-index#fugit@0.3.7",
        "registry+https://github.com/rust-lang/crates.io-index#instability@0.3.7",
        "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218",
        "registry+https://github.com/rust-lang/crates.io-index#strum@0.27.1",
        "registry+https://github.com/rust-lang/crates.io-index#ufmt-write@0.1.0",
        "registry+https://github.com/rust-lang/crates.io-index#void@1.0.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-metadata@0.6.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.96",
        "registry+https://github.com/rust-lang/crates.io-index#basic-toml@0.1.9",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218",
        "registry+https://github.com/rust-lang/crates.io-index#strum@0.26.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-println@0.13.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-wifi-sys@0.7.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#anyhow@1.0.96"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp-wifi@0.13.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#document-features@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-net-driver@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#embassy-sync@0.6.2",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#embedded-io-async@0.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#enumset@1.1.5",
        "registry+https://github.com/rust-lang/crates.io-index#esp-alloc@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-build@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-config@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#esp-hal@1.0.0-beta.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-metadata@0.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#esp-wifi-sys@0.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
        "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.4.2",
        "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#portable_atomic_enum@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#esp32c6@0.19.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#critical-section@1.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#vcell@0.1.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fnv@1.0.7",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#fugit@0.3.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#gcd@2.3.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-sink@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#futures-util@0.3.31",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#futures-core@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#futures-task@0.3.31",
        "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
        "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#gcd@2.3.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
        "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hash32@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#hash32@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hex@0.4.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#hmac@0.12.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ident_case@1.0.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#equivalent@1.0.2",
        "registry+https://github.com/rust-lang/crates.io-index#hashbrown@0.15.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#inout@0.1.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#generic-array@0.14.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#instability@0.3.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#darling@0.20.10",
        "registry+https://github.com/rust-lang/crates.io-index#indoc@2.0.5",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libc@0.2.170",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#libm@0.2.11",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#linked_list_allocator@0.10.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#litrs@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#log@0.4.26",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#managed@0.8.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#nb@0.1.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#nb@1.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-derive@0.4.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num-traits@0.2.19",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#autocfg@1.4.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num_enum@0.7.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#num_enum_derive@0.7.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#num_enum_derive@0.7.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#object@0.36.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#paste@1.0.15",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.6.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-project-lite@0.2.16",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pin-utils@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#poly1305@0.8.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#opaque-debug@0.3.1",
        "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#portable_atomic_enum@0.3.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0",
        "registry+https://github.com/rust-lang/crates.io-index#portable_atomic_enum_macros@0.2.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#portable_atomic_enum_macros@0.2.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#pretty-hex@0.4.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-crate@3.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.24"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error2@2.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro-error-attr2@2.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.17"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#getrandom@0.2.15"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustc_version@0.4.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.25"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.19",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#semver@1.0.25",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.218"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_derive@1.0.218",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#cpufeatures@0.2.17",
        "registry+https://github.com/rust-lang/crates.io-index#digest@0.10.7"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#smoltcp@0.12.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#bitflags@1.3.2",
        "registry+https://github.com/rust-lang/crates.io-index#byteorder@1.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#cfg-if@1.0.0",
        "registry+https://github.com/rust-lang/crates.io-index#heapless@0.8.0",
        "registry+https://github.com/rust-lang/crates.io-index#managed@0.8.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#snafu-derive@0.8.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#snafu@0.8.5",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#snafu-derive@0.8.5"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssh-cipher@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#cipher@0.4.4",
        "registry+https://github.com/rust-lang/crates.io-index#ssh-encoding@0.2.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssh-encoding@0.2.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#base64ct@1.6.0",
        "registry+https://github.com/rust-lang/crates.io-index#pem-rfc7468@0.7.0",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ssh-key@0.6.7",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#ed25519-dalek@2.1.1",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#sha2@0.10.8",
        "registry+https://github.com/rust-lang/crates.io-index#signature@2.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssh-cipher@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#ssh-encoding@0.2.0",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#stable_deref_trait@1.2.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#static_cell@2.1.0",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#portable-atomic@1.11.0"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strsim@0.11.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strum@0.26.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.26.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strum@0.27.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.27.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.26.4",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.19",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#strum_macros@0.27.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#heck@0.5.0",
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#rustversion@1.0.19",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.17"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#termcolor@1.4.1",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#toml_edit@0.22.24",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#indexmap@2.7.1",
        "registry+https://github.com/rust-lang/crates.io-index#serde@1.0.218",
        "registry+https://github.com/rust-lang/crates.io-index#serde_spanned@0.6.8",
        "registry+https://github.com/rust-lang/crates.io-index#toml_datetime@0.6.8",
        "registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.3"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#typenum@1.18.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#ufmt-write@0.1.0",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#unicode-ident@1.0.17",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#universal-hash@0.5.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#crypto-common@0.1.6",
        "registry+https://github.com/rust-lang/crates.io-index#subtle@2.6.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#vcell@0.1.3",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#version_check@0.9.5",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#virtue@0.0.16",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#void@1.0.2",
      "dependsOn": []
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#winnow@0.7.3",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#memchr@2.7.4"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#x25519-dalek@2.0.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#curve25519-dalek@4.1.3",
        "registry+https://github.com/rust-lang/crates.io-index#rand_core@0.6.4",
        "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize@1.8.1",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2"
      ]
    },
    {
      "ref": "registry+https://github.com/rust-lang/crates.io-index#zeroize_derive@1.4.2",
      "dependsOn": [
        "registry+https://github.com/rust-lang/crates.io-index#proc-macro2@1.0.93",
        "registry+https://github.com/rust-lang/crates.io-index#quote@1.0.38",
        "registry+https://github.com/rust-lang/crates.io-index#syn@2.0.98"
      ]
    }
  ]
}